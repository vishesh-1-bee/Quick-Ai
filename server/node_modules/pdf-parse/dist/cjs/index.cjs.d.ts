import { TypedArray } from './DocumentInitParameters.js';
export type { DocumentInitParameters, PDFDataRangeTransport, PDFWorker, TypedArray } from './DocumentInitParameters.js';
export type { EmbeddedImage, ImageKindKey, ImageKindValue, ImageResult, PageImages } from './ImageResult.js';
export type { InfoResult, Metadata } from './InfoResult.js';
export type { PageToImage, PageToImageResult } from './PageToImageResult.js';
export type { PageTableResult, TableResult } from './TableResult.js';
export type { PageTextResult, TextResult } from './TextResult.js';
declare function pdf(data: string | URL | number[] | ArrayBuffer | TypedArray): Promise<import('./TextResult.js').TextResult>;
declare namespace pdf {
    var PDFParse: typeof import("./PDFParse.js").PDFParse;
    var pdf: typeof import("./index.cjs.js").default;
    var initPDFJS: typeof import("./PDFParse.js").initPDFJS;
}
export default pdf;
