import type { DocumentInitParameters } from './DocumentInitParameters.js';
import { ImageResult } from './ImageResult.js';
import { PageToImageResult } from './PageToImageResult.js';
import type { ParseParameters } from './ParseParameters.js';
import { TableResult } from './TableResult.js';
import { TextResult } from './TextResult.js';
export declare class PDFParse {
    private readonly options;
    private doc;
    constructor(options: DocumentInitParameters);
    enviroment(): {
        isBrowser: boolean;
        isCJS: boolean;
        isESM: boolean;
    };
    getText(params?: ParseParameters): Promise<TextResult>;
    private load;
    private shouldParse;
    private getPageText;
    private getHyperlinks;
    getImage(params?: ParseParameters): Promise<ImageResult>;
    private convertToRGBA;
    private resolveEmbeddedImage;
    pageToImage(params?: ParseParameters): Promise<PageToImageResult>;
    getTable(params?: ParseParameters): Promise<TableResult>;
    private getPathGeometry;
    private getPageTables;
    private fillPageTables;
}
export declare function initPDFJS(workerSrc?: string | undefined): void;
